@model Kladionica.Models.Ticket

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Ticket</h4>
<hr />
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@Html.HiddenFor(model => model.SelectedOutcome)

<div class="form-group">
    @Html.LabelFor(model => model.Payment, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Payment, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Payment, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Costs, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Costs, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Costs, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Stake, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Stake, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Stake, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.TotalCoefficient, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.TotalCoefficient, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.TotalCoefficient, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.WinningTicket, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.WinningTicket, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.WinningTicket, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Gain, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Gain, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Gain, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />
    </div>
</div>


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
